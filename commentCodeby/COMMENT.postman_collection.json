{
	"info": {
		"_postman_id": "77f3fd60-8ede-4638-bf2d-2bc8032ef7f4",
		"name": "COMMENT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "app",
			"item": [
				{
					"name": "mutation upsert_app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $name: String!) {\n  upsert_app(\n    input: {\n      id: $id,\n      name: $name\n    }\n  ) {\n    id\n    name\n    created_at\n    updated_at\n  }\n}\n",
								"variables": "{\n    \"id\": \"8\",\n    \"name\": \"123451\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation delete_app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $ids: [ID]) {\n  delete_app(\n    input: {\n      id: $id,\n      ids: $ids,\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"8\",\n    \"ids\": [1, 2]\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation duplicate_app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID) {\n  duplicate_app(\n    input: {\n      id: $id\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String, $args: JSON){\n    list_app(\n        name: $name\n        args: $args\n    ) {\n        data{\n            id\n        }\n        pageInfo\n    }\n}",
								"variables": "{\n    \"name\": \"\",\n    \"args\": {\n        \"per_page\":5,\n        \"current_page\":4,\n        \"sort\":[\"id\", \"asc\"]\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n    detail_app(id: $id) {\n        id\n    }\n}",
								"variables": "{\n    \"id\": \"3\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "comment",
			"item": [
				{
					"name": "mutation upsert_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $app_id: ID!, $content: String!, $people:JSON!, $unique: JSON!) {\n  upsert_comment(\n    input: {\n      id: $id,\n      app_id: $app_id,\n      unique: $unique,\n      content: $content,\n      people: $people\n    }\n  ) {\n    id\n    content\n    created_at\n    updated_at\n    people{id,name,avatar,profile_url}\n    subComment{id}\n  }\n}\n",
								"variables": "{\n    \"id\": null,\n    \"app_id\": \"1\",\n    \"content\": \"$content\",\n    \"people\": {\n        \"special_id\":\"$unique_id12\",\n        \"name\":\"name\",\n        \"avatar\":\"avatar\",\n        \"profile_url\":\"http://aa.com\"\n    },\n    \"unique\": {\n        \"special_id\":\"$unique_id12\"\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation delete_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $ids: [ID]) {\n  delete_comment(\n    input: {\n      id: $id,\n      ids: $ids,\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"8\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation duplicate_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID) {\n  duplicate_comment(\n    input: {\n      id: $id\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($app_id: ID!, $unique:JSON!, $name: String, $args: JSON){\n    list_comment(\n        app_id: $app_id\n        unique: $unique\n        name: $name\n        args: $args\n    ) {\n        data{\n            id\n            content\n            people{id, name, avatar}\n            total_subs\n            created_at\n            total_like\n        }\n        pageInfo\n    }\n}",
								"variables": "{\n    \"app_id\":\"1\",\n    \"unique\":{\n        \"special_id\":\"$unique_id12\"\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n    detail_comment(id: $id) {\n        id\n        subComment{\n            id, \n            content, \n            created_at, \n            updated_at\n        }\n    }\n}",
								"variables": "{\n    \"id\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "people",
			"item": [
				{
					"name": "mutation upsert_people",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $app_id: ID, $unique: JSON!, $content: String!, $people:JSON) {\n  upsert_people(\n    input: {\n      id: $id,\n      app_id: $app_id,\n      unique_id: $unique_id,\n      content: $content,\n      people: $people\n    }\n  ) {\n    id\n    content\n    created_at\n    updated_at\n    people{id,name,avatar}\n  }\n}\n",
								"variables": "{\n    \"id\": null,\n    \"app_id\": \"1\",\n    \"unique_id\": \"$unique_id\",\n    \"content\": \"$content\",\n    \"people\": {\n        \"unique_id\":\"$unique_id12\",\n        \"name\":\"name\",\n        \"avatar\":\"avatar\"\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation delete_people",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $ids: [ID]) {\n  delete_people(\n    input: {\n      id: $id,\n      ids: $ids,\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"8\",\n    \"ids\": [1, 2]\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation duplicate_people",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID) {\n  duplicate_people(\n    input: {\n      id: $id\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_people",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String, $args: JSON){\n    list_people(\n        name: $name\n        args: $args\n    ) {\n        data{\n            id\n        }\n        pageInfo\n    }\n}",
								"variables": "{\n    \"name\": \"\",\n    \"args\": {\n        \"per_page\":5,\n        \"current_page\":4,\n        \"sort\":[\"id\", \"asc\"]\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_people",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n    detail_people(id: $id) {\n        id\n    }\n}",
								"variables": "{\n    \"id\": \"3\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "subComment",
			"item": [
				{
					"name": "mutation upsert_subComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $app_id: ID!, $unique: JSON!, $comment_id: ID!, $content: String!, $people:JSON!) {\n  upsert_subComment(\n    input: {\n      id: $id,\n      app_id: $app_id,\n      unique_id: $unique_id,\n      comment_id: $comment_id,\n      content: $content,\n      people: $people\n    }\n  ) {\n    id\n    content\n    created_at\n    updated_at\n    people{id,name,avatar}\n    comment{id}\n  }\n}\n",
								"variables": "{\n    \"id\": null,\n    \"app_id\": \"1\",\n    \"unique\": {\n        \"special_id\":\"$unique_id\"\n        },\n    \"comment_id\": \"1\",\n    \"content\": \"$content\",\n    \"people\": {\n        \"unique_id\":\"$unique_id121\",\n        \"name\":\"name\",\n        \"avatar\":\"avatar\"\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation delete_subComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $ids: [ID]) {\n  delete_subComment(\n    input: {\n      id: $id,\n      ids: $ids,\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"8\",\n    \"ids\": [1, 2]\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation duplicate_subComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID) {\n  duplicate_subComment(\n    input: {\n      id: $id\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_subComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($comment_id: ID!, $name: String, $args: JSON){\n    list_subComment(\n        comment_id: $comment_id\n        name: $name\n        args: $args\n    ) {\n        data{\n            id\n        }\n        pageInfo\n    }\n}",
								"variables": "{\n    \"comment_id\": 35,\n    \"name\": \"\",\n    \"args\": {\n        \"per_page\":5,\n        \"current_page\":1,\n        \"sort\":[\"id\", \"asc\"]\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_subComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n    detail_subComment(id: $id) {\n        id\n    }\n}",
								"variables": "{\n    \"id\": \"3\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "like",
			"item": [
				{
					"name": "mutation upsert_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $app_id: ID!, $likeable_type: String!, $likeable_id: ID!, $is_like: Boolean, $is_dislike: Boolean, $people:JSON!) {\n  upsert_like(\n    input: {\n      id: $id,\n      app_id: $app_id,\n      likeable_type: $likeable_type,\n      likeable_id: $likeable_id,\n      is_like: $is_like,\n      is_dislike: $is_dislike,\n      people: $people\n    }\n  ) {\n    id\n  }\n}\n",
								"variables": "{\n    \"id\": null,\n    \"app_id\": \"1\",\n    \"likeable_type\": \"App\\\\Models\\\\Comment\",\n    \"likeable_id\": \"2\",\n    \"is_like\": true,\n    \"is_dislike\": true,\n    \"people\": {\n        \"unique_id\":\"$unique_id12\",\n        \"name\":\"name\",\n        \"avatar\":\"avatar\"\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation delete_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $ids: [ID]) {\n  delete_like(\n    input: {\n      id: $id,\n      ids: $ids,\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"8\",\n    \"ids\": [1, 2]\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation duplicate_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID) {\n  duplicate_like(\n    input: {\n      id: $id\n    }\n  )\n}\n",
								"variables": "{\n    \"id\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($likeable_type: String!, $likeable_id: ID!, $args: JSON){\n    list_like(\n        likeable_type: $likeable_type\n        likeable_id: $likeable_id\n        args: $args\n    ) {\n        data{\n            id\n            is_like\n            is_dislike\n            people{id, name, avatar}\n            created_at\n            updated_at\n        }\n        pageInfo\n    }\n}",
								"variables": "{\n    \"likeable_type\": \"App\\\\Models\\\\Comment\",\n    \"likeable_id\": \"1\",\n    \"args\": {\n        \"per_page\":5,\n        \"current_page\":1,\n        \"sort\":[\"id\", \"asc\"]\n    }\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n    detail_like(id: $id) {\n        id\n    }\n}",
								"variables": "{\n    \"id\": \"3\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
        {
            "name": "unique",
            "item": [
                {
                    "name": "mutation upsert_unique",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation($id: ID, $app_id: ID!, $unique: JSON!, $comment_id: ID!, $content: String!, $people:JSON!) {\n  upsert_unique(\n    input: {\n      id: $id,\n      app_id: $app_id,\n      unique_id: $unique_id,\n      comment_id: $comment_id,\n      content: $content,\n      people: $people\n    }\n  ) {\n    id\n    content\n    created_at\n    updated_at\n    people{id,name,avatar}\n    comment{id}\n  }\n}\n",
                                "variables": "{\n    \"id\": null,\n    \"app_id\": \"1\",\n    \"unique\": {\n        \"special_id\":\"$unique_id\"\n        },\n    \"comment_id\": \"1\",\n    \"content\": \"$content\",\n    \"people\": {\n        \"unique_id\":\"$unique_id121\",\n        \"name\":\"name\",\n        \"avatar\":\"avatar\"\n    }\n}"
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/graphql",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "mutation delete_unique",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation($id: ID, $ids: [ID]) {\n  delete_unique(\n    input: {\n      id: $id,\n      ids: $ids,\n    }\n  )\n}\n",
                                "variables": "{\n    \"id\": \"8\",\n    \"ids\": [1, 2]\n}"
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/graphql",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "mutation duplicate_unique",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "mutation($id: ID) {\n  duplicate_unique(\n    input: {\n      id: $id\n    }\n  )\n}\n",
                                "variables": "{\n    \"id\": \"1\"\n}"
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/graphql",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "query list_unique",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query($comment_id: ID!, $name: String, $args: JSON){\n    list_unique(\n        comment_id: $comment_id\n        name: $name\n        args: $args\n    ) {\n        data{\n            id\n        }\n        pageInfo\n    }\n}",
                                "variables": "{\n    \"comment_id\": 35,\n    \"name\": \"\",\n    \"args\": {\n        \"per_page\":5,\n        \"current_page\":1,\n        \"sort\":[\"id\", \"asc\"]\n    }\n}"
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/graphql",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "query detail_unique",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "graphql",
                            "graphql": {
                                "query": "query($id: ID!){\n    detail_unique(id: $id) {\n        id\n    }\n}",
                                "variables": "{\n    \"id\": \"3\"\n}"
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/graphql",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "graphql"
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
		{
			"name": "auth",
			"item": [
				{
					"name": "mutation register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($name: String!, $email: String!, $password: String!, $password_confirmation: String!) {\n  register(\n    input: {\n      name: $name\n      email: $email\n      password: $password\n      password_confirmation: $password_confirmation\n    }\n  ) {\n    status\n  }\n}",
								"variables": "{\n    \"name\": \"$name\",\n    \"email\": \"email@gmail.com\",\n    \"password\": \"$password\",\n    \"password_confirmation\": \"$password\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "mutation login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($username: String!,$password: String!) {\n  login(\n    input: {\n      username: $username\n      password: $password\n    }\n  ) {\n    access_token\n    refresh_token\n    expires_in\n    token_type\n    user {\n      id\n      email\n      name\n    }\n  }\n}",
								"variables": "{\n    \"username\": \"email@gmail.com\",\n    \"password\": \"$password\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  users {\n    data {\n      id\n      name\n      email\n    }\n  }\n}",
								"variables": "{\n    \"username\": \"email@gmail.com\",\n    \"password\": \"$password\"\n}"
							}
						},
						"url": {
							"raw": "{{base_url}}/graphql",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
