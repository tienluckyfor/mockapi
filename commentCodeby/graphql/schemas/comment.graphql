extend type Mutation {
    upsert_comment(input: UpsertCommentInput! @spread): Comment @field(resolver: "App\\GraphQL\\Mutations\\CommentMutations@upsertComment")
    delete_comment(input: DeleteCommentInput! @spread): Boolean @field(resolver: "App\\GraphQL\\Mutations\\CommentMutations@deleteComment")
    duplicate_comment(input: DeleteCommentInput! @spread): Boolean @field(resolver: "App\\GraphQL\\Mutations\\CommentMutations@duplicateComment")
}

extend type Query {
    list_comment(name: String, args:JSON): ListComment @field(resolver: "App\\GraphQL\\Queries\\CommentQueries@listComment")
    detail_comment(id:ID!): Comment @field(resolver: "App\\GraphQL\\Queries\\CommentQueries@detailComment")
}

type ListComment{
    data: [Comment],
    pageInfo: JSON
}
type Comment{
    id: ID
    people: People
    content:String
    created_at: DateTime!
    updated_at: DateTime!
    subComment: [SubComment]
    subInfo: SubInfo
    total_subs: Int
    total_like: Int
    total_dislike: Int
    likes: [Like]
}
type SubInfo{
    data:[SubComment]
    pageInfo: JSON
}
input UpsertCommentInput{
    id: ID
    app_id: ID!
    unique_id: ID!
    content: String!
    people:JSON!
}
input DeleteCommentInput{
    id: ID
    ids: [ID]
}
